version: "3.8"
services:
  reverse-proxy:
    image: traefik:2.5
    command: --api.insecure=true --providers.docker=true --entrypoints.web.address=:80
    ports:
      - 8080:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  mongodb:
    image: "bitnami/mongodb:latest"
    ports:
      - "27017:27017"
    volumes:
      - "mongodb_data:/bitnami"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh --quiet
      interval: 10s
      timeout: 10s
      retries: 5
  scichat-loopback:
    image: "dacat/scichat-loopback:e2e"
    command:
      [
        "./wait-for-it.sh",
        "mongodb:27017",
        "--",
        "node",
        "-r",
        "dotenv/config",
        "."
      ]
    volumes:
      - "./CI/ESS/e2e/.env:/home/node/app/.env"
    depends_on:
      mongodb:
        condition: service_completed_successfully
  backend:
    image: ghcr.io/scicatproject/backend-next:latest
    command: sh -c " sleep 5 && node dist/main"
    ports:
      - 3000:3000
    volumes:
      - "./CI/ESS/e2e/.env.backend-next:/home/node/app/.env"
    depends_on:
      mongodb:
        condition: service_completed_successfully
      scichat-loopback:
        condition: service_completed_successfully
      es01:
        condition: service_completed_successfully
    labels:
      - "traefik.http.routers.backend.rule=PathPrefix(`/api/v3`, `/auth/msad`)"
      - "traefik.http.routers.backend.entrypoints=web"
  frontend:
    build:
      context: .
      dockerfile: CI/ESS/e2e/Dockerfile.e2e
    command:
      [
        "./wait-for-it.sh",
        "backend:3000",
        "--",
        "nginx",
        "-g",
        "daemon off;"
      ]
    ports:
      - 4200:80
    volumes:
      - "./CI/ESS/e2e/config.e2e.json:/usr/share/nginx/html/assets/config.json"
      - "./CI/ESS/site.png:/usr/share/nginx/html/assets/images/site.png"
      - "./CI/ESS/site-logo.png:/usr/share/nginx/html/assets/images/site-logo.png"
      - "./CI/ESS/favicon.ico:/usr/share/nginx/html/favicon.ico"
    depends_on:
      backend:
        condition: service_completed_successfully
    labels:
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.http.routers.frontend.entrypoints=web"
  es01:
    depends_on:
      mongodb:
        condition: service_completed_successfully
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.2
    ports:
      - 9200:9200
    environment:
      - xpack.security.enabled=false
      - node.name=es01
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - ES_PASSWORD=password
      - cluster.name=es-cluster
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
    mem_limit: 1g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -f http://es01:9200/_cluster/health?wait_for_status=yellow&timeout=50s || exit 1"
        ]
      interval: 30s
      timeout: 30s
      start_period: 60s
      retries: 5
volumes:
  mongodb_data:
    driver: local
